#!/usr/bin/env python3

import sys

def man_help():
    print("USAGE")
    print("\t./106bombyx n [k | i0 i1]")
    print()
    print("DESCRIPTION")
    print("\tn\t number of first generation individuals")
    print("\tk\t growth rate from 1 to 4")
    print("\ti0\t initial generation (included)")
    print("\ti1\t final generation (included)")

def valid_string(string):
    try:
        float(string)
    except ValueError:
        sys.stderr.write("Invalid argument\n")
        exit(84)

def first_part(n, k):
    i = 1
    print(f"{i} {n:.2f}")
    while i < 100:
        n = k * n * ((1000 - n) / 1000)
        n = max(n, 0)
        i += 1
        print(f"{i} {n:.2f}")

def second_part(n, i0, i1):
    k = 1.00
    while k < 4:
        i = 1
        temp_n = n
        while i < i0:
            temp_n = k * temp_n * ((1000 - temp_n) / 1000)
            temp_n = max(temp_n, 0)
            i += 1

        while i <= i1:
            print(f"{k:.2f} {temp_n:.2f}")
            temp_n = k * temp_n * ((1000 - temp_n) / 1000)
            temp_n = max(temp_n, 0)
            i += 1

        k += 0.01

def main():
    if len(sys.argv) in (2, 3, 4):
        if sys.argv[1] == "-h":
            man_help()
            exit(0)

        for arg in sys.argv[1:]:
            valid_string(arg)

        n = float(sys.argv[1])
        if n < 0:
            sys.stderr.write("n can't be negative\n")
            exit(84)

        if len(sys.argv) == 3:
            k = float(sys.argv[2])
            if not 1 <= k <= 4:
                sys.stderr.write("k must be between 1 and 4\n")
                exit(84)
            first_part(n, k)

        elif len(sys.argv) == 4:
            i0 = int(sys.argv[2])
            i1 = int(sys.argv[3])
            if i0 >= i1:
                sys.stderr.write("i0 must be less than i1\n")
                exit(84)
            second_part(n, i0, i1)

    else:
        sys.stderr.write("Invalid number of arguments\n")
        exit(84)

if __name__ == "__main__":
    main()
